# ~/.config/nushell/config.nu

$env.STARSHIP_SHELL = "nu"

let black_fg = "\e[30m"
let black_bg = "\e[40m"
let blue_fg = "\e[38;2;129;169;254m"
let blue_bg = "\e[48;2;129;169;254m"
let dark_blue_fg = "\e[38;2;59;66;97m"
let dark_blue_bg = "\e[48;2;59;66;97m"
let pink_fg = "\e[38;2;197;134;192m"
let bold = "\e[1m"
let reset = "\e[0m"

let user = $env.USER

def format-path [path: string] {
    if $path == "/" {
        "/"
    } else {
        let home = $env.HOME
        let relative_path = ($path | str replace $home "~")

        let path_parts = ($relative_path | split row "/")

        let path_parts_count = ($path_parts | length)

        if $path_parts_count < 2 {
            $relative_path
        } else {
            let abbreviated_parts = ($path_parts | each {|part| 
                if $part in ($path_parts | skip ($path_parts_count - 2)) {
                    $part
                } else {
                    ($part | str substring 0..0)
                }
            })

            let formatted_path = ($abbreviated_parts | str join ($" ($black_fg)" + "" + $"($blue_fg) "))

            if ($relative_path | str starts-with "/") {
                "/" + $formatted_path
            } else {
                $formatted_path
            }
        }
    }
}

def get-git-info [] {
    if (git rev-parse --is-inside-work-tree err> /dev/null) == "true" {
        let branch = (git symbolic-ref --short HEAD err> /dev/null)
        if ($branch != "") {
            $branch
        } else {
            ""
        }
    } else {
        ""
    }
}

def getshells [] {
    let shells = ((shells | enumerate | where $it.item.active == true).0.index err> /dev/null)
    if (shells | length) > 1 {
        $" ($dark_blue_bg + $blue_fg) №($shells)"
    } else {
        ""
    }
}

def create_prompt [] {
    let path = (format-path (pwd))
    let git_info = (get-git-info)
    let shells_info = (getshells)

    mut prompt = $"($reset)\n┌ "
    $prompt += $"($blue_fg)($reset)"
    $prompt += $"($blue_bg + $black_fg) NU▕ ($user + $shells_info) ($reset)"
    $prompt += $"($black_bg + if $shells_info != "" { $dark_blue_fg } else { $blue_fg })($reset)"
    $prompt += $"($dark_blue_bg + $black_fg)"
    $prompt += $"($dark_blue_bg + $blue_fg) ($path) ($reset)"
    $prompt += $"($dark_blue_fg)($reset)"

    if $git_info != "" {
        $prompt += $" ($pink_fg) ($git_info)($reset)"
        if $env.LAST_EXIT_CODE == 0 {
            $prompt += " "
        }
    }

    if $env.LAST_EXIT_CODE != 0 {
        $prompt += $"($bold + $dark_blue_fg) ($env.LAST_EXIT_CODE) ($reset)"
    }

    $prompt += $"($blue_fg)($reset)"

    $prompt
}

$env.PROMPT_COMMAND = { create_prompt }
$env.PROMPT_COMMAND_RIGHT = ""

$env.PROMPT_INDICATOR = $reset + "\n└ > "
$env.PROMPT_MULTILINE_INDICATOR = "┆ - "